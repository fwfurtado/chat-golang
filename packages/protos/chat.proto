syntax = "proto3";

package chat;

option go_package = "chat/pb";

import "google/protobuf/timestamp.proto";

message Participant {
  int64 id = 1;
}


enum MessageState {
  MESSAGE_STATE_UNKNOWN = 0;
  MESSAGE_STATE_SENT = 1;
  MESSAGE_STATE_DELIVERED = 2;
  MESSAGE_STATE_READ = 3;
}

message Message {
  int64 id = 1;
  string text = 2;
  MessageState state = 3;
  Participant sender = 4;
  google.protobuf.Timestamp timestamp = 5;
}



message FilterByParticipant {
  int64 participant_id = 1;
}

message ConversationSummary {
  int64 id = 1;
  string name = 2;
  google.protobuf.Timestamp created_at = 4;
  int64 unread_count = 5;
  bool is_new = 6;
  optional Message last_message = 7;
}

message ListConversationsResponse {
  repeated ConversationSummary conversations = 1;
}

message CreateConversationRequest {
  string name = 1;
  int64 owner_id = 2;
}

message FilterConversationByOwner {
  int64 owner_id = 1;
  int64 conversation_id = 2;
}

message FilterMessages {
  int64 conversation_id = 1;
  int64 participant_id = 2;
}

message ListMessagesResponse {
  repeated Message messages = 1;
}


service ConversationService {
  rpc ListConversations(FilterByParticipant) returns (ListConversationsResponse) {}
  rpc CreateConversation(CreateConversationRequest) returns (ConversationSummary) {}
  rpc PullUnreadMessages(FilterConversationByOwner) returns (ListMessagesResponse) {}
  rpc ListenMessages(FilterMessages) returns (stream Message) {}
}